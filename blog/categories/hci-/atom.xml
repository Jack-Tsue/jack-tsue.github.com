<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HCI, | 我的宅]]></title>
  <link href="http://jack1991.com/blog/categories/hci-/atom.xml" rel="self"/>
  <link href="http://jack1991.com/"/>
  <updated>2013-01-23T23:14:48+08:00</updated>
  <id>http://jack1991.com/</id>
  <author>
    <name><![CDATA[Jack]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HCI_REVIEW]]></title>
    <link href="http://jack1991.com/blog/2012/06/25/hci-review/"/>
    <updated>2012-06-25T19:58:00+08:00</updated>
    <id>http://jack1991.com/blog/2012/06/25/hci-review</id>
    <content type="html"><![CDATA[<h1>HCI复习</h1>

<h2>1、什么是人机交互？</h2>

<p>(不仅是做漂亮的界面)</p>

<p>ACM SIGCHI Curricula for HCI:</p>

<blockquote><p>  “HCI is a discipline concerned with the design, evaluation and implementation of interactive computing systems for human”</p></blockquote>

<p><strong>HCI重要性</strong></p>

<p><em>市场角度</em></p>

<ul>
<li>用户期望简单易用的系统</li>
<li>对设计低劣系统的容忍度越来越差</li>
</ul>


<p><em>企业角度</em></p>

<ul>
<li>提高员工的生产效率</li>
<li>降低产品的开发成本</li>
<li>降低产品的后续支持成本</li>
</ul>


<p><em>用户角度</em></p>

<ul>
<li>获得较高的主观满意度</li>
<li>减少时间、金钱、生命损失</li>
</ul>


<!-- more -->


<p>HCI是一门研究与用户之间的互动关系的学问. 对于人机交互的设计要包含用户对系统的理解, 以达到系统的可用性和用户友好性. 这是一门涉及软件工程/CS/认知学/心理学/图形设计/工业设计的交叉学科.</p>

<h2>2、人机交互涉及那些内容？（了解）</h2>

<p>Human Factor/psychology/computing/sociology/business &amp; management/etc. --> HCI</p>

<p>HCI--> visualisation/CSCW(Computer-supported cooperative work)/ubiquitous computing/e-learning/etc.</p>

<p>涉及格式塔心理学/认知心理学/计算机科学/工业设计等学科.</p>

<h2>3、人机交互（是一个交叉的学科）和软件工程的关系是什么？</h2>

<h3>差异</h3>

<p>软件工程师与人机交互设计人员关注的重点有很大不同:</p>

<pre><code>以功能为中心vs.以用户为中心
</code></pre>

<p>交互设计的评估方式也与一般软件工程方法存在不同.
二者经常分开讨论.</p>

<h3>促进作用</h3>

<p>传统SE方法在实现交互式系统方面的缺陷:</p>

<ul>
<li>没有提出明确地对用户界面及可用性需求进行描述的方法</li>
<li>不能够在系统开发过程进行中对用户界面进行终端测试</li>
<li>具有完善的系统功能, 但是产品的可用性、有效性以及满意度并不高</li>
</ul>


<p>而人机交互可以改善传统SE方法的缺陷.</p>

<h3>将二者结合的困难</h3>

<p>价值观不同:</p>

<ul>
<li>SE: 实施策略和方法选择上常有一定的倾向性</li>
<li>HCI: 包含较多的主观性和灵活性</li>
</ul>


<p>方法论存在差异:</p>

<ul>
<li>SE: 形式化分析方法</li>
<li>HCI: 非形式化分析方法</li>
</ul>


<h2>4、人机交互包括人，计算机，交互。4个阶段。简述执行隔阂和评估隔阂，以及对交互设计的指导意义。</h2>

<p>四个阶段:</p>

<ul>
<li>目标(Goal)≠意图(Intention)</li>
<li>执行(Execution)</li>
<li>客观因素(World)</li>
<li>评估(Evaluation)</li>
</ul>


<p>执行隔阂</p>

<pre><code>用户为达目标而制定的动作与系统允许的动作之间的差别
</code></pre>

<p>评价隔阂</p>

<pre><code>系统状态的实际表现与用户预期之间的差别
</code></pre>

<h2>5、设计的目的。为了提高用户两个方面的体验，可用性目标（简易可用性工程，包括什么方面？如何度量），用户满意度目标。</h2>

<p>设计的目的</p>

<pre><code>为了使产品易学易用, 使用户喜爱产品
</code></pre>

<p><strong>可用性目标</strong></p>

<ul>
<li>易学性(最基本的可用性属性, 10分钟法则)</li>
<li>易记性(影响因素: 位置/分组/惯例/冗余)</li>
<li>有效率</li>
<li>低出错率(灾难性错误的发生频率降到最低, 出错后迅速回复正常)</li>
<li>主观满意度(观念转变, 传统软件质量观->人机交互软件质量观)</li>
</ul>


<p><strong>简易可用性工程:</strong></p>

<ul>
<li><p>以提高产品的可用性为目标的先进的产品开发方法论</p></li>
<li><p>借鉴了许多不同领域的方法和技术</p></li>
<li><p>强调以人为中心来进行交互式产品的设计研发</p></li>
</ul>


<p><strong>可用性度量</strong></p>

<pre><code>方法:
(1) 选择一些能够代表目标用户群体的测试用户
(2) 让这些用户使用系统执行一组预定的任务
(3) 比较任务的执行情况

针对多维属性:
    取每个可用性属性的平均值 
    查看整体分布情况
</code></pre>

<p>注意事项:</p>

<ul>
<li>度量一定要针对特定的用户和特定的任务进行</li>
<li>用户对不同任务的可用性结果预期可能不同</li>
<li>因此测试前要明确一组具有代表性的测试任务</li>
</ul>


<p>完整的可用性工程过程</p>

<ul>
<li>了解用户</li>
<li>竞争性分析</li>
<li>设定可用性目标</li>
<li>用户参与的设计</li>
<li>迭代设计</li>
<li>产品发布后的工作</li>
</ul>


<p>简化</p>

<ul>
<li>用户和任务观察</li>
<li>场景(scenario)</li>
<li>简化的边做边说(thinking aloud)</li>
<li>启发式评估</li>
</ul>


<h2>6、设计原则，罗列常用的6，7个启发式规则。（根据界面说违反了那些规则）</h2>

<h3>设计规则</h3>

<p>基本规则,by Alan Dix</p>

<ul>
<li>可学习性: 新用户能用它开始有效的交互并能获得最大的性能</li>
<li>灵活性: 用户和系统能以多种方式交换信息</li>
<li>健壮性: 在决定成就和目标评估方面对用户提供的支持程度</li>
</ul>


<p>黄金规则</p>

<ul>
<li>1.尽可能保证一致</li>
<li>2.符合普遍可用性</li>
<li>3.提供信息丰富的反馈</li>
<li>4.设计说明对话框以生成结束信息</li>
<li>5.预防并处理错误</li>
<li>6.让操作容易撤销</li>
<li>7.支持内部控制点</li>
<li>8.减轻短时记忆负担</li>
</ul>


<h3>十项启发式规则</h3>

<pre><code>(罗列常用的, 根据界面说违反了哪些)
系统状态的可见度: 比如对于长时间操作提供进度条
系统与现实世界的吻合: 不要告诉用户系统内部的错误, 而是他们看得懂的
用户享有系统的控制权和自主权: 提供undo, redo等
一致性和标准化: 图标风格一致, 操作名称一致
避免出错
依赖于识别而非记忆
使用的灵活性和高效性: 快捷键
审美感和最小化设计: 不要把太多东西放在对话框上; 使用标准控件; 选择字体大小区分重要度
帮助用户识别, 诊断和恢复错误: 错误信息要用简明的语言描述, 并提供建议
帮助和文档: 语言简单标准, 提供搜索, 导航, 超链接
</code></pre>

<h2>7、交互设计的过程，生命周期、模型等。</h2>

<p>交互设计过程的基本活动</p>

<ol>
<li>标识用户需要并建立需求</li>
<li>开发满足需求的候选设计方案</li>
<li>构建设计的交互式版本</li>
<li>评估设计</li>
</ol>


<p>特征:</p>

<ul>
<li>以用户为中心(人机交互领域的核心观点)</li>
<li>稳定的可用性标准(有助于选择; 在产品开发过程中随时检查)</li>
<li>迭代(利用反馈改进设计)</li>
</ul>


<p>生命周期:</p>

<pre><code>生命周期模型都是现实的简化表示,是现实的一种抽象.
</code></pre>

<p>软件工程领域:</p>

<ul>
<li>瀑布模型</li>
<li>螺旋模型</li>
<li>动态系统开发方法</li>
</ul>


<p>人机交互领域:</p>

<ul>
<li>星形生命周期模型</li>
<li>可用性生命周期模型</li>
</ul>


<p><strong>星形生命周期模型</strong></p>

<p>分析模式</p>

<pre><code>自顶向下, 组织化, 判定和正式化. 系统-&gt;用户
</code></pre>

<p>合成模式</p>

<pre><code>自底向上, 自由思考, 创造性. 用户-&gt;系统
</code></pre>

<p>特点</p>

<ul>
<li>没有指定任何活动次序</li>
<li>评估是这个模型的核心</li>
<li><p>源于开发人员的实际经验</p>

<p>  需求规格说明, 概念设计/形式化设计, 任务分析/功能分析, 实现, 原型…都是围绕着<strong>评估</strong>展开的.</p></li>
</ul>


<h2>8、描述需求，如何构建人物角色，如何运用场景进行描述；</h2>

<blockquote><p>需求</p>

<ul>
<li><p>关于目标产品的一种陈述,它指定了产品应做什么,或者应如何工作</p></li>
<li><p>应该是具体、明确和无歧义的</p></li>
</ul>
</blockquote>

<p>需求活动</p>

<ol>
<li>搜集数据</li>
<li>解释数据</li>
<li>提取需求</li>
</ol>


<p>构建人物角色:</p>

<ol>
<li>拼凑</li>
<li>组织</li>
<li>细节</li>
<li>求精</li>
</ol>


<p>以上过程循环迭代</p>

<p><strong>场景</strong>: 场景是表示任务和工作结构的“非正式的叙述性描述”</p>

<p>人物角色+场景剧本→需求</p>

<p>需求定义的步骤:</p>

<ol>
<li>创建问题和前景综述</li>
<li>头脑风暴</li>
<li>人物角色的期望</li>
<li>构建情境场景剧本</li>
<li>需要</li>
</ol>


<h2>9、交互设计细节方面的问题。（各个方面的折中）</h2>

<h2>10、什么样的软件是好的？</h2>

<h2>11、可视化设计，界面组件，（例题：菜单的设计，设计的原则）</h2>

<h2>12、评估。Goetz and Lecomfte评估框架。</h2>

<h2>13、任务的描述。如何定义任务？常见的技术和技术组合方式。可用性目标。评估方法的常见组合方式。</h2>

<h2>14、模型和理论。绿色模型重点。GOMS模型。缩写的全称。Fitts定律。</h2>

<h2>15、以用户为中心的设计思想可能存在哪些问题？怎么去解决这些问题？</h2>

<h2>16、需求：层次化任务分析。</h2>

<h2>考试内容</h2>

<h3>1. 第一题简答题：5，6道题。什么是××？对交互设计有什么指导意义？</h3>

<h3>2. 3或4道简答题：实际的问题。（给出交互设计原则）</h3>

<h3>3. 最后一道大题：具体的设计题。评估实验的设计。</h3>
]]></content>
  </entry>
  
</feed>
