<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 算法 | 我的宅]]></title>
  <link href="http://jack1991.com/blog/categories/算法/atom.xml" rel="self"/>
  <link href="http://jack1991.com/"/>
  <updated>2013-01-23T22:55:37+08:00</updated>
  <id>http://jack1991.com/</id>
  <author>
    <name><![CDATA[Jack]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[求1+2+…+n]]></title>
    <link href="http://jack1991.com/blog/2012/09/11/interestques/"/>
    <updated>2012-09-11T12:29:00+08:00</updated>
    <id>http://jack1991.com/blog/2012/09/11/interestques</id>
    <content type="html"><![CDATA[<p>刚才看到一个很蛋疼的问题：</p>

<pre><code>求1+2+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字以及条件判断语句（包括A?B:C）。
</code></pre>

<p>这在实际开发中几乎不会遇到，算是一道脑筋急转弯类型的题目。</p>

<p>我一开始的思路来自OO。</p>

<p>比如，不能直接用循环体，那就把原本放在循环体内的逻辑写在一个对象的构造函数里面，然后new一个含有n个此对象的数组，就间接实现了n次循环。</p>

<p>不能用if判断什么的就更容易了，直接用表驱动。</p>

<p>不过这样子写出的代码可以预见一定很是难看。</p>

<p>后来发现一个更间接的巧妙解决方法，但通用性就不如以OO思维推导出来的了：</p>

<p><div><script src='https://gist.github.com/3696536.js?file='></script>
<noscript><pre><code>int f(int n)
{
    int sum = 1;
    return ((n-1) &amp;&amp; !(sum = n + f(n-1))) | sum;
}</code></pre></noscript></div>
</p>

<p>不知道大家有没有其他的思路？</p>
]]></content>
  </entry>
  
</feed>
